---
- name: "Install podman packages"
  ansible.builtin.dnf:
    name:
      - podman
    state: present


- name: "Create a layercake config directory"
  ansible.builtin.file:
    path: /etc/layercake
    state: directory
    mode: '0755'


- name: "Create a layercake tmp directory"
  ansible.builtin.file:
    path: /tmp/layercakepodtmp
    state: directory
    mode: '1777'

- name: "Create layercake spool directory"
  ansible.builtin.file:
    path: /var/layercakepodspool
    state: directory
    mode: 0755

- name: "Create layercake sysconfig file"
  template:
    src: layercake.j2
    dest: /etc/sysconfig/layercake
    owner: root
    group: root
    mode: 0644

- name: "Create layercake unit file"
  template:
    src: layercake.service.j2
    dest: /etc/systemd/system/layercake.service
    owner: root
    group: root
    mode: 0644
  register: layercake_result

- name: "Reload systemd config"
  ansible.builtin.systemd:
    daemon_reload: yes
  when: layercake_result.changed

- name: "Enable and start layercake service"
  ansible.builtin.systemd:
    name: layercake
    state: started
    enabled: yes

- name: "Put registries config file in place"
  ansible.builtin.copy:
    src: registries.conf
    dest: /etc/containers/registries.conf
    owner: root
    group: root
    mode: '0644'


- name: "Enable the podman service"
  ansible.builtin.systemd:
    name: podman.service
    enabled: yes

- name: "Enable and start the podman socket"
  ansible.builtin.systemd:
    name: podman.socket
    state: started
    enabled: yes


# The containers.podman.podman_network module can't handle "parent" as a key
# in the "opt" dictionary, so creating the network needs to be done
# manually for now
- name: "Get existing podman network names"
  ansible.builtin.command: "podman network ls --format=json"
  changed_when: false
  register: podman_network_result

# FIXME: the parent and the subnet should both be variables
- name: "Create cvlan podman network"
  ansible.builtin.command: "podman network create -d macvlan -o parent=eth1 --subnet 192.168.56.0/24 cvlan"
  changed_when: false
  when:
    - "not ansible_check_mode"
    - "'cvlan' not in podman_network_result.stdout | from_json | json_query('[].name')"


- name: "Put user pod unit file in place"
  template:
    src: layercake-pod.service.j2
    dest: /etc/systemd/system/layercake-pod.service
    owner: root
    group: root
    mode: 0644
  register: layercake_pod_result

- name: "Reload systemd config"
  ansible.builtin.systemd:
    daemon_reload: yes
  when: layercake_pod_result.changed

- name: "Enable and start user pod"
  ansible.builtin.systemd:
    name: layercake-pod
    state: started
    enabled: yes

# The containers.podman.podman_secret module expects the secret data to be
# a string, which doesn't work with a binary file.  So, creating the secret
# needs to be done manually for now
- name: "Copy munge key"
  ansible.builtin.copy:
    src: munge.key
    dest: /etc/layercake/munge.key
    owner: root
    group: root
    mode: 0400

- name: "Get existing secrets"
  ansible.builtin.command: "podman secret ls --format='{{\"{{.Name}}\"}}'"
  changed_when: false
  register: podman_secret_result

- name: "Create munge key secret"
  ansible.builtin.command: "podman secret create mungekey /etc/layercake/munge.key"
  when: "'mungekey' not in podman_secret_result.stdout"


# FIXME: this directory creation should probably be done via systemd
- name: "Create the munge state directory"
  ansible.builtin.file:
    path: /run/layercake/munge
    state: directory
    mode: '0755'


- name: "Put munged container unit file in place"
  template:
    src: layercake-munged.service.j2
    dest: /etc/systemd/system/layercake-munged.service
    owner: root
    group: root
    mode: 0644
  register: munged_container_result

- name: "Reload systemd config"
  ansible.builtin.systemd:
    daemon_reload: yes
  when: munged_container_result.changed

- name: "Enable and start munged container"
  ansible.builtin.systemd:
    name: layercake-munged
    state: started
    enabled: yes


- name: "Put slurmd container unit file in place"
  template:
    src: layercake-slurmd.service.j2
    dest: /etc/systemd/system/layercake-slurmd.service
    owner: root
    group: root
    mode: 0644
  register: slurmd_container_result

- name: "Reload systemd config"
  ansible.builtin.systemd:
    daemon_reload: yes
  when: slurmd_container_result.changed

- name: "Enable and start slurmd container"
  ansible.builtin.systemd:
    name: layercake-slurmd
    state: started
    enabled: yes
